<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Just Vehicles - Sistema Completo</title>
  <style>
    /* Reset e base */
    * {
      box-sizing: border-box;
    }
    body, html {
      margin: 0; padding: 0; height: 100%;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #121917;
      color: #d1f2a5;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
      overflow: hidden;
    }
    /* Tela login full screen */
    #telaLogin {
      position: fixed;
      inset: 0;
      background: #1b2a1f;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      z-index: 9999;
      gap: 15px;
      box-shadow: inset 0 0 50px #34d058aa;
      padding: 20px;
    }
    #telaLogin h1 {
      margin: 0 0 15px;
      font-size: 2.5rem;
      user-select: none;
      text-shadow: 0 0 10px #34d058cc;
    }
    #telaLogin input, #telaLogin select, #telaLogin button {
      padding: 12px 18px;
      font-size: 1.1rem;
      border-radius: 25px;
      border: none;
      width: 280px;
      max-width: 100%;
      background: #18241a;
      color: #d1f2a5;
      box-shadow: inset 0 0 8px #34d058;
      font-weight: 700;
      transition: background-color 0.3s ease;
    }
    #telaLogin input::placeholder {
      color: #8abf7a;
      font-weight: 400;
    }
    #telaLogin input:focus, #telaLogin select:focus {
      outline: none;
      background: #213121;
      box-shadow: 0 0 12px #34d058;
    }
    #telaLogin button {
      cursor: pointer;
      box-shadow: 0 0 12px #34d058;
      user-select: none;
    }
    #telaLogin button:hover {
      background: #2fb44d;
      box-shadow: 0 0 18px #34d058ff;
    }
    #telaLogin .mensagemErro {
      color: #e84545;
      font-weight: 700;
      user-select: none;
      margin-top: 5px;
      height: 22px;
    }

    /* App container (tudo depois do login) */
    #appContainer {
      flex-grow: 1;
      display: flex;
      height: 100vh;
      overflow: hidden;
    }

    /* Menu lateral */
    aside#menuLateral {
      width: 280px;
      background-color: #1b2a1f;
      box-shadow: inset -4px 0 15px rgba(52, 208, 88, 0.7);
      padding: 20px;
      display: flex;
      flex-direction: column;
      gap: 20px;
      color: #d1f2a5;
      overflow-y: auto;
      user-select: none;
    }
    aside#menuLateral h2 {
      margin: 0 0 10px;
      font-size: 1.6rem;
      border-bottom: 2px solid #34d058;
      padding-bottom: 5px;
    }
    aside#menuLateral section {
      border-top: 1px solid #2f4e22;
      padding-top: 10px;
      max-height: 300px;
      overflow-y: auto;
    }
    aside#menuLateral label, aside#menuLateral select, aside#menuLateral input {
      font-weight: 700;
      background-color: #18241a;
      color: #d1f2a5;
      border: none;
      border-radius: 8px;
      padding: 8px;
      width: 100%;
      box-sizing: border-box;
      margin-top: 5px;
    }
    aside#menuLateral input[type="text"] {
      font-weight: normal;
    }
    aside#menuLateral button {
      background: #34d058;
      border: none;
      color: #121917;
      padding: 10px;
      border-radius: 25px;
      font-weight: 700;
      cursor: pointer;
      box-shadow: 0 0 10px #34d058cc;
      transition: background-color 0.3s ease;
      margin-top: 10px;
      user-select: none;
    }
    aside#menuLateral button:hover {
      background: #2fb44d;
      box-shadow: 0 0 18px #34d058ff;
    }
    aside#menuLateral .btnRemoverUser {
      background: #e84545;
      color: white;
      padding: 4px 10px;
      border-radius: 12px;
      font-weight: 700;
      margin-left: 10px;
      box-shadow: 0 0 8px #e84545cc;
      transition: background-color 0.3s ease;
    }
    aside#menuLateral .btnRemoverUser:hover {
      background: #ff5555;
      box-shadow: 0 0 12px #ff5555cc;
    }

    /* Header */
    header {
      background: #0f1a13;
      color: #d1f2a5;
      padding: 15px 20px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: 15px;
      flex-wrap: wrap;
      border-bottom: 2px solid #34d058;
      box-shadow: 0 2px 10px rgba(52, 208, 88, 0.4);
      position: relative;
      user-select: none;
      flex-shrink: 0;
    }
    header img {
      height: 45px;
      filter: drop-shadow(0 0 3px #34d058);
    }
    .site-name {
      font-weight: 700;
      font-size: 1.5rem;
      user-select: none;
      flex-grow: 1;
    }
    .search-bar {
      padding: 10px 15px;
      width: 250px;
      max-width: 100%;
      border: none;
      border-radius: 25px;
      font-size: 1rem;
      background-color: #1f2a20;
      color: #d1f2a5;
      box-shadow: inset 0 0 8px #34d058;
      transition: box-shadow 0.3s ease;
      user-select: text;
    }
    .search-bar::placeholder {
      color: #8abf7a;
    }
    .search-bar:focus {
      outline: none;
      box-shadow: 0 0 12px #34d058;
      background-color: #18241a;
    }

    /* Área principal carros */
    main#mainContent {
      flex-grow: 1;
      padding: 15px 20px 30px;
      max-width: 1000px;
      margin: 0 auto;
      width: 100%;
      box-sizing: border-box;
      overflow-y: auto;
    }
    #listaCarros {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin-top: 10px;
      user-select: none;
    }
    .car-card {
      background: #1b2a1f;
      aspect-ratio: 4 / 3;
      padding: 15px;
      border-radius: 20px;
      box-shadow:
        0 4px 10px rgba(52, 208, 88, 0.3),
        inset 0 0 15px #2d7e1a66;
      text-align: center;
      display: flex;
      flex-direction: column;
      justify-content: start;
      color: #d1f2a5;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      cursor: default;
      position: relative;
      overflow: hidden;
    }
    .car-card:hover {
      transform: translateY(-8px);
      box-shadow:
        0 10px 25px rgba(52, 208, 88, 0.7),
        inset 0 0 20px #3fba2baa;
    }
    .car-card img {
      width: 100%;
      height: auto;
      max-height: 140px;
      object-fit: contain;
      border-radius: 15px;
      margin-bottom: 15px;
      filter: drop-shadow(0 0 8px #34d058);
      user-select: none;
      flex-shrink: 0;
      transition: transform 0.3s ease;
    }
    .car-card:hover img {
      transform: scale(1.05);
    }
    .car-card h3 {
      margin: 0 0 8px;
      font-size: 1.3rem;
      font-weight: 700;
      text-shadow: 0 0 8px #34d058cc;
      user-select: text;
      flex-grow: 1;
    }
    .car-card p {
      margin: 0;
      font-weight: 600;
      color: #9fca7c;
      text-shadow: 0 0 5px #2a5c2e;
      cursor: pointer;
      user-select: text;
      transition: color 0.3s ease;
    }
    .car-card p:hover {
      color: #34d058;
    }
    /* Botão remover carro */
    .btnRemover {
      position: absolute;
      top: 10px;
      right: 10px;
      background: #e84545;
      border: none;
      color: white;
      border-radius: 50%;
      width: 28px;
      height: 28px;
      font-weight: 700;
      cursor: pointer;
      opacity: 0.85;
      transition: opacity 0.3s ease;
      user-select: none;
    }
    .btnRemover:hover {
      opacity: 1;
      background: #ff5555;
    }

    /* Área adicionar carro */
    #areaAdicionarCarro {
      margin: 20px 0 10px;
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      background: #18241a;
      padding: 15px 20px;
      border-radius: 20px;
      box-shadow: 0 0 12px #34d058aa inset;
      user-select: none;
    }
    #areaAdicionarCarro select,
    #areaAdicionarCarro input[type="text"],
    #areaAdicionarCarro button {
      font-weight: 700;
      background-color: #1f2a20;
      color: #d1f2a5;
      border: none;
      border-radius: 25px;
      padding: 10px 15px;
      cursor: pointer;
      box-shadow: inset 0 0 8px #34d058;
      transition: background-color 0.3s ease, box-shadow 0.3s ease;
      user-select: text;
    }
    #areaAdicionarCarro input[type="text"],
    #areaAdicionarCarro select {
      flex-grow: 1;
      max-width: 220px;
    }
    #areaAdicionarCarro button:hover {
      background-color: #2fb44d;
      box-shadow: 0 0 18px #34d058ff;
    }

    /* Logs */
    #logs {
      background: #18241a;
      padding: 15px;
      border-radius: 15px;
      max-height: 250px;
      overflow-y: auto;
      font-size: 0.9rem;
      color: #a3d19c;
      user-select: text;
      white-space: pre-wrap;
      box-shadow: inset 0 0 12px #34d058aa;
      font-family: monospace;
    }

    /* Scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }
    ::-webkit-scrollbar-track {
      background: #121917;
    }
    ::-webkit-scrollbar-thumb {
      background-color: #34d058;
      border-radius: 20px;
      border: 2px solid #121917;
    }

    /* Mensagem boas vindas */
    #boasVindas {
      padding: 10px 20px;
      font-size: 1.2rem;
      font-weight: 700;
      color: #34d058;
      text-shadow: 0 0 10px #34d058aa;
      user-select: none;
    }

    /* Responsividade */
    @media(max-width: 700px) {
      aside#menuLateral {
        width: 100%;
        max-height: 250px;
        flex-direction: row;
        overflow-x: auto;
      }
      #areaAdicionarCarro {
        flex-direction: column;
      }
      #areaAdicionarCarro input[type="text"], #areaAdicionarCarro select {
        max-width: 100%;
      }
      #listaCarros {
        grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
      }
    }
  </style>
</head>
<body>

  <!-- Tela Login -->
  <section id="telaLogin" role="dialog" aria-modal="true" aria-labelledby="tituloLogin">
    <h1 id="tituloLogin">Login - Just Vehicles</h1>
    <input type="text" id="inputNome" placeholder="Digite seu nome" aria-label="Nome do usuário" autocomplete="off" />
    <select id="selectPermissao" aria-label="Selecionar permissão do usuário">
      <option value="randola">Usuário comum</option>
      <option value="adm">Administrador</option>
      <option value="ceo">CEO</option>
    </select>
    <button id="btnEntrar" aria-label="Entrar no sistema">Entrar</button>
    <div class="mensagemErro" role="alert" aria-live="assertive" id="mensagemErro"></div>
  </section>

  <!-- App Container -->
  <div id="appContainer" style="display:none;">
    <!-- Menu lateral -->
    <aside id="menuLateral" role="navigation" aria-label="Menu lateral de navegação">
      <div id="boasVindas" aria-live="polite"></div>

      <section id="secUsuarios" style="display:none;">
        <h2>Gerenciar Usuários (CEO)</h2>
        <div>
          <label for="novoUserNome">Nome do novo usuário:</label>
          <input type="text" id="novoUserNome" aria-label="Nome do novo usuário" autocomplete="off" />
        </div>
        <div>
          <label for="novoUserPermissao">Permissão do novo usuário:</label>
          <select id="novoUserPermissao" aria-label="Permissão do novo usuário">
            <option value="randola">Usuário comum</option>
            <option value="adm">Administrador</option>
            <option value="ceo">CEO</option>
          </select>
        </div>
        <button id="btnAddUser" aria-label="Adicionar novo usuário">Adicionar Usuário</button>

        <h3>Usuários existentes:</h3>
        <ul id="listaUsuarios" style="list-style:none; padding-left:0; max-height:150px; overflow-y:auto; color:#d1f2a5;"></ul>
      </section>

      <section id="secLogs" style="display:none;">
        <h2>Logs de Atividades (CEO)</h2>
        <div id="logs" tabindex="0" aria-label="Logs das atividades"></div>
      </section>
    </aside>

    <!-- Conteúdo principal -->
    <main id="mainContent" tabindex="0" role="main" aria-label="Conteúdo principal">
      <header>
        <img src="https://cdn.discordapp.com/attachments/1395776398869790850/1404427449470685254/dbd1dd651d70777c7c91d9051d8856ca-removebg-preview.png?ex=689b267c&is=6899d4fc&hm=804bdf797d62dbcae7e8f5df5897c670a697fae276b23fac66bc727aaee85310&" alt="Logo Just Vehicles" />
        <div class="site-name">Just Vehicles</div>
        <input
          type="text"
          id="inputBuscarCarro"
          class="search-bar"
          placeholder="Pesquisar carro..."
          aria-label="Pesquisar carro"
        />
      </header>

      <div id="areaAdicionarCarro" aria-label="Adicionar novo carro" style="display:none;">
        <input type="text" id="novoNomeCarro" placeholder="Nome do carro" aria-label="Nome do carro" autocomplete="off" />
        <select id="novaCategoriaCarro" aria-label="Categoria do carro">
          <option value="SUV">SUV</option>
          <option value="Sedan">Sedan</option>
          <option value="Esportivo">Esportivo</option>
          <option value="Pickup">Pickup</option>
        </select>
        <input type="text" id="novaImagemCarro" placeholder="URL da imagem do carro" aria-label="URL da imagem do carro" autocomplete="off" />
        <button id="btnAdicionarCarro" aria-label="Adicionar carro">Adicionar Carro</button>
      </div>

      <section id="listaCarros" aria-live="polite" aria-relevant="additions removals">
        <!-- Carros aqui -->
      </section>
    </main>
  </div>

  <script>
    // Inicializa usuários no localStorage (se ainda não existir)
    if (!localStorage.getItem("usuarios")) {
      const usuariosIniciais = [
        { nome: "Monarck.Dev", permissao: "ceo" },
        { nome: "adm", permissao: "adm" },
        { nome: "user", permissao: "randola" }
      ];
      localStorage.setItem("usuarios", JSON.stringify(usuariosIniciais));
    }

    // Inicializa carros no localStorage (se não existir)
    if (!localStorage.getItem("carros")) {
      const carrosIniciais = [
        { nome: "Jeep Compass", categoria: "SUV", imagem: "https://cdn.discordapp.com/attachments/1395776398869790850/1404382920414238338/jeep_compass-removebg-preview.png" },
        { nome: "Honda Civic", categoria: "Sedan", imagem: "https://cdn.discordapp.com/attachments/1395776398869790850/1404382922776828422/civic-removebg-preview.png" },
        { nome: "Ferrari F8", categoria: "Esportivo", imagem: "https://cdn.discordapp.com/attachments/1395776398869790850/1404382919191663656/ferrari-removebg-preview.png" }
      ];
      localStorage.setItem("carros", JSON.stringify(carrosIniciais));
    }

    // Inicializa logs (array de strings) no localStorage
    if (!localStorage.getItem("logs")) {
      localStorage.setItem("logs", JSON.stringify([]));
    }

    // Variáveis globais
    let usuarios = JSON.parse(localStorage.getItem("usuarios"));
    let carros = JSON.parse(localStorage.getItem("carros"));
    let logs = JSON.parse(localStorage.getItem("logs"));
    let usuarioAtual = null;

    // Elementos DOM
    const telaLogin = document.getElementById("telaLogin");
    const inputNome = document.getElementById("inputNome");
    const selectPermissao = document.getElementById("selectPermissao");
    const btnEntrar = document.getElementById("btnEntrar");
    const mensagemErro = document.getElementById("mensagemErro");

    const appContainer = document.getElementById("appContainer");
    const boasVindas = document.getElementById("boasVindas");

    const secUsuarios = document.getElementById("secUsuarios");
    const listaUsuarios = document.getElementById("listaUsuarios");
    const btnAddUser = document.getElementById("btnAddUser");
    const novoUserNome = document.getElementById("novoUserNome");
    const novoUserPermissao = document.getElementById("novoUserPermissao");

    const secLogs = document.getElementById("secLogs");
    const logsDiv = document.getElementById("logs");

    const areaAdicionarCarro = document.getElementById("areaAdicionarCarro");
    const novoNomeCarro = document.getElementById("novoNomeCarro");
    const novaCategoriaCarro = document.getElementById("novaCategoriaCarro");
    const novaImagemCarro = document.getElementById("novaImagemCarro");
    const btnAdicionarCarro = document.getElementById("btnAdicionarCarro");

    const listaCarros = document.getElementById("listaCarros");
    const inputBuscarCarro = document.getElementById("inputBuscarCarro");

    // Função para salvar usuários no localStorage
    function salvarUsuarios() {
      localStorage.setItem("usuarios", JSON.stringify(usuarios));
    }

    // Função para salvar carros no localStorage
    function salvarCarros() {
      localStorage.setItem("carros", JSON.stringify(carros));
    }

    // Função para salvar logs no localStorage
    function salvarLogs() {
      localStorage.setItem("logs", JSON.stringify(logs));
    }

    // Função para adicionar log
    function adicionarLog(texto) {
      const dataHora = new Date().toLocaleString();
      const logTexto = `[${dataHora}] ${texto}`;
      logs.push(logTexto);
      if (logs.length > 100) logs.shift(); // mantém máximo 100 logs
      salvarLogs();
      atualizarLogs();
    }

    // Atualiza área logs
    function atualizarLogs() {
      if (!secLogs.style.display || secLogs.style.display === "none") return;
      logsDiv.textContent = logs.join("\n");
      logsDiv.scrollTop = logsDiv.scrollHeight;
    }

    // Atualiza lista de usuários na interface (para CEO)
    function atualizarListaUsuarios() {
      listaUsuarios.innerHTML = "";
      usuarios.forEach((u, i) => {
        const li = document.createElement("li");
        li.textContent = `${u.nome} [${u.permissao}]`;
        if (u.nome !== usuarioAtual.nome) {
          const btnRemover = document.createElement("button");
          btnRemover.textContent = "X";
          btnRemover.className = "btnRemoverUser";
          btnRemover.title = `Remover usuário ${u.nome}`;
          btnRemover.onclick = () => {
            if (confirm(`Tem certeza que deseja remover o usuário ${u.nome}?`)) {
              usuarios.splice(i, 1);
              salvarUsuarios();
              adicionarLog(`${usuarioAtual.nome} removeu o usuário ${u.nome}`);
              atualizarListaUsuarios();
            }
          };
          li.appendChild(btnRemover);
        } else {
          const span = document.createElement("span");
          span.style.fontStyle = "italic";
          span.style.color = "#8abf7a";
          span.textContent = " (você)";
          li.appendChild(span);
        }
        listaUsuarios.appendChild(li);
      });
    }

    // Atualiza lista de carros na interface (aplicando filtro)
    function atualizarListaCarros(filtro = "") {
      listaCarros.innerHTML = "";
      const filtroLower = filtro.toLowerCase();
      const carrosFiltrados = carros.filter(c => c.nome.toLowerCase().includes(filtroLower) || c.categoria.toLowerCase().includes(filtroLower));
      if (carrosFiltrados.length === 0) {
        const noMsg = document.createElement("p");
        noMsg.textContent = "Nenhum carro encontrado.";
        noMsg.style.color = "#e84545";
        noMsg.style.textAlign = "center";
        noMsg.style.fontWeight = "700";
        listaCarros.appendChild(noMsg);
        return;
      }
      carrosFiltrados.forEach((carro, index) => {
        const card = document.createElement("article");
        card.className = "car-card";
        card.setAttribute("tabindex", "0");

        const img = document.createElement("img");
        img.src = carro.imagem;
        img.alt = `Imagem do carro ${carro.nome}`;
        img.loading = "lazy";
        card.appendChild(img);

        const titulo = document.createElement("h3");
        titulo.textContent = carro.nome;
        card.appendChild(titulo);

        const cat = document.createElement("p");
        cat.textContent = `Categoria: ${carro.categoria}`;
        card.appendChild(cat);

        // Só pode remover se for adm ou ceo
        if (usuarioAtual.permissao === "adm" || usuarioAtual.permissao === "ceo") {
          const btnRemoverCarro = document.createElement("button");
          btnRemoverCarro.className = "btnRemover";
          btnRemoverCarro.title = `Remover o carro ${carro.nome}`;
          btnRemoverCarro.textContent = "✖";
          btnRemoverCarro.onclick = () => {
            if (confirm(`Remover o carro "${carro.nome}"?`)) {
              carros.splice(index, 1);
              salvarCarros();
              adicionarLog(`${usuarioAtual.nome} removeu o carro ${carro.nome}`);
              atualizarListaCarros(inputBuscarCarro.value);
            }
          };
          card.appendChild(btnRemoverCarro);
        }
        listaCarros.appendChild(card);
      });
    }

    // Login: verifica se usuário existe e permissao bate
    function login(nome, permissao) {
      if (!nome.trim()) {
        mensagemErro.textContent = "Digite seu nome!";
        return false;
      }
      const usuario = usuarios.find(u => u.nome.toLowerCase() === nome.trim().toLowerCase());
      if (!usuario) {
        mensagemErro.textContent = "Usuário não encontrado!";
        return false;
      }
      if (usuario.permissao !== permissao) {
        mensagemErro.textContent = "Permissão incorreta para este usuário!";
        return false;
      }
      usuarioAtual = usuario;
      mensagemErro.textContent = "";
      return true;
    }

    // Faz o login e mostra app
    btnEntrar.addEventListener("click", () => {
      const nome = inputNome.value.trim();
      const permissao = selectPermissao.value;

      if (login(nome, permissao)) {
        telaLogin.style.display = "none";
        appContainer.style.display = "flex";
        boasVindas.textContent = `Bem-vindo(a), ${usuarioAtual.nome} [${usuarioAtual.permissao.toUpperCase()}]!`;
        carregarInterface();
        adicionarLog(`${usuarioAtual.nome} entrou no sistema como ${usuarioAtual.permissao}`);
      }
    });

    // Carrega interface de acordo com permissão
    function carregarInterface() {
      // CEO vê aba de usuários e logs, pode adicionar/remover usuários e ver logs
      if (usuarioAtual.permissao === "ceo") {
        secUsuarios.style.display = "block";
        secLogs.style.display = "block";
        areaAdicionarCarro.style.display = "flex";
        atualizarListaUsuarios();
        atualizarLogs();
      } else {
        secUsuarios.style.display = "none";
        secLogs.style.display = "none";
        // ADM pode adicionar/remover carros
        if (usuarioAtual.permissao === "adm") {
          areaAdicionarCarro.style.display = "flex";
        } else {
          areaAdicionarCarro.style.display = "none";
        }
      }
      atualizarListaCarros();
    }

    // Adiciona novo usuário (CEO somente)
    btnAddUser.addEventListener("click", () => {
      if (usuarioAtual.permissao !== "ceo") return alert("Somente CEO pode adicionar usuários!");
      const nomeNovo = novoUserNome.value.trim();
      const permissaoNova = novoUserPermissao.value;

      if (!nomeNovo) return alert("Digite o nome do usuário!");
      if (usuarios.find(u => u.nome.toLowerCase() === nomeNovo.toLowerCase())) {
        return alert("Usuário já existe!");
      }
      usuarios.push({ nome: nomeNovo, permissao: permissaoNova });
      salvarUsuarios();
      adicionarLog(`${usuarioAtual.nome} adicionou o usuário ${nomeNovo} como ${permissaoNova}`);
      atualizarListaUsuarios();
      novoUserNome.value = "";
      novoUserPermissao.value = "randola";
    });

    // Adicionar carro (adm e ceo)
    btnAdicionarCarro.addEventListener("click", () => {
      if (usuarioAtual.permissao !== "adm" && usuarioAtual.permissao !== "ceo") {
        alert("Você não tem permissão para adicionar carros!");
        return;
      }
      const nomeCarro = novoNomeCarro.value.trim();
      const categoriaCarro = novaCategoriaCarro.value;
      const imagemCarro = novaImagemCarro.value.trim();

      if (!nomeCarro || !imagemCarro) {
        alert("Preencha nome e URL da imagem do carro.");
        return;
      }

      carros.push({ nome: nomeCarro, categoria: categoriaCarro, imagem: imagemCarro });
      salvarCarros();
      adicionarLog(`${usuarioAtual.nome} adicionou o carro ${nomeCarro} (${categoriaCarro})`);
      atualizarListaCarros(inputBuscarCarro.value);
      novoNomeCarro.value = "";
      novaCategoriaCarro.value = "SUV";
      novaImagemCarro.value = "";
    });

    // Pesquisa carros ao digitar
    inputBuscarCarro.addEventListener("input", () => {
      atualizarListaCarros(inputBuscarCarro.value);
    });

    // Inicializa foco
    inputNome.focus();

  </script>

</body>
</html>
